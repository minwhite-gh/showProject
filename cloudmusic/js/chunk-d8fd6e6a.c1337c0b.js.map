{"version":3,"sources":["webpack:///./src/views/Songdetail.vue?eebd","webpack:///src/views/Songdetail.vue","webpack:///./src/views/Songdetail.vue?e217","webpack:///./src/views/Songdetail.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","backgroundImage","songData","al","picUrl","on","toBack","attrs","_v","_s","name","_m","singerImg","ar","_l","item","index","key","golyrics","iconimg","title","thisSongData","newDate","touchSSliderBtn","touchMsliderBtn","touchEsliderBtn","totalTime","switchBtn","newShowBtn","setPrevSong","clickPlay","btnUrl","setNextSong","showPopup","height","popupOpened","popupClose","model","value","callback","$$v","show","expression","listLength","playStyleText","class","isActive","$event","clickSongListItem","delSong","imgUrl","staticRenderFns","component"],"mappings":"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","file":"js/chunk-d8fd6e6a.c1337c0b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"songdetali\"},[_c('div',{staticClass:\"beforeBg\",style:({ backgroundImage: 'url(' + _vm.songData.al.picUrl + ')' })}),_c('div',{staticClass:\"top flexbetween\"},[_c('div',{staticClass:\"top-left\"},[_c('div',{staticClass:\"iconbox\",on:{\"click\":_vm.toBack}},[_c('van-icon',{attrs:{\"name\":\"arrow-left\",\"size\":\"24\"}})],1),_c('div',{staticClass:\"namebox\"},[_c('span',{staticClass:\"one-ellipsis\"},[_vm._v(_vm._s(_vm.songData.name))])])]),_vm._m(0)]),_c('div',{staticClass:\"body\"},[_c('div',{staticClass:\"songdatabox flexbetween\"},[_c('div',{staticClass:\"singerimgbox\"},[_c('div',{staticClass:\"imgbox\"},[(_vm.songData.singerImg)?_c('img',{attrs:{\"src\":_vm.songData.singerImg,\"alt\":\"\"}}):_c('p',[_vm._v(\" 暂无 \"),_c('br'),_vm._v(\"图片 \")])]),_c('div',{staticClass:\"singername\"},[_c('span',{staticClass:\"one-ellipsis\"},[_vm._v(_vm._s(_vm.songData.ar[0].name))]),_c('van-icon',{attrs:{\"name\":\"arrow\",\"size\":\"8\"}})],1)]),_c('div',{staticClass:\"iconsbox\"},_vm._l((_vm.iconsdata),function(item,index){return _c('div',{key:index,staticClass:\"iconboxitem\"},[_c('div',{staticClass:\"iconboxitem-img\",on:{\"click\":_vm.golyrics}},[_c('img',{attrs:{\"src\":item.iconimg,\"alt\":\"\"}})]),_c('div',{staticClass:\"titlebox\"},[_c('span',[_vm._v(_vm._s(item.title))])])])}),0)]),_c('div',{staticClass:\"bodyconent\"},[_c('div',{staticClass:\"mintop\"}),_c('div',{staticClass:\"conentImg\",on:{\"click\":_vm.golyrics}},[_c('img',{attrs:{\"src\":_vm.songData.al.picUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"sliderBox\"},[_c('div',{staticClass:\"showBox\"}),_c('div',{staticClass:\"startNum\"},[_vm._v(_vm._s(_vm.thisSongData.newDate))]),_c('div',{staticClass:\"sliderBtn\",on:{\"touchstart\":_vm.touchSSliderBtn,\"touchmove\":_vm.touchMsliderBtn,\"touchend\":_vm.touchEsliderBtn}}),_c('div',{staticClass:\"endNum\"},[_vm._v(_vm._s(_vm.songData.totalTime))])]),_c('div',{staticClass:\"operationBox flexbetween\"},[_c('div',{staticClass:\"leftBtn\",on:{\"click\":_vm.switchBtn}},[_c('img',{attrs:{\"src\":_vm.newShowBtn,\"alt\":\"\"}})]),_c('div',{staticClass:\"centerBtn flexbetween\"},[_c('div',{staticClass:\"centerBtn_left clearfix\",on:{\"click\":_vm.setPrevSong}},[_c('div',{staticClass:\"sjx_left fl\"}),_c('div',{staticClass:\"sjx_left fl\"})]),_c('div',{staticClass:\"centerBtn_center\",on:{\"click\":_vm.clickPlay}},[_c('img',{attrs:{\"src\":_vm.btnUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"centerBtn_right clearfix\",on:{\"click\":_vm.setNextSong}},[_c('div',{staticClass:\"sjx_right fr\"}),_c('div',{staticClass:\"sjx_right fr\"})])]),_c('div',{staticClass:\"rightBtn\",attrs:{\"is-link\":\"\"},on:{\"click\":_vm.showPopup}},[_c('img',{attrs:{\"src\":require(\"../assets/img/musiclist.svg\"),\"alt\":\"\"}})]),_c('van-popup',{style:({ height: '64%' }),attrs:{\"round\":\"\",\"position\":\"bottom\"},on:{\"opened\":_vm.popupOpened,\"close\":_vm.popupClose},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('div',{staticClass:\"title flexbetween\"},[_c('div',{staticClass:\"titleLeft\"},[_c('span',[_vm._v(\"当前播放\")]),_c('span',{staticClass:\"num\"},[_vm._v(\"(\"+_vm._s(_vm.listLength)+\")\")])]),_c('div',{staticClass:\"titleRgiht\",on:{\"click\":_vm.switchBtn}},[_c('span',[_vm._v(_vm._s(_vm.playStyleText))]),_c('img',{attrs:{\"src\":_vm.newShowBtn,\"alt\":\"\"}})])]),_c('div',{staticClass:\"listBody\"},_vm._l((_vm.songListData),function(item,index){return _c('div',{key:index,staticClass:\"listBodyItem flexbetween\",class:item.isActive ? 'active' : ''},[_c('div',{staticClass:\"listBodyItem_left one-ellipsis\",on:{\"click\":function($event){return _vm.clickSongListItem(item, index)}}},[_c('div',{staticClass:\"text\"},[_c('span',{staticClass:\"songName\"},[_vm._v(_vm._s(item.name))]),_c('span',{staticClass:\"songHen\"},[_vm._v(\"-\")]),_c('span',{staticClass:\"songAuther\"},[_vm._v(_vm._s(item.ar[0].name))])])]),_c('div',{staticClass:\"listBodyItem_right\",on:{\"click\":function($event){return _vm.delSong(index)}}},[_c('img',{attrs:{\"src\":require(\"../assets/img/close.svg\"),\"alt\":\"\"}})])])}),0)])],1),_c('div',{staticClass:\"bottomBtnList\"},_vm._l((_vm.bottomBtnData),function(item,index){return _c('div',{key:index,staticClass:\"bottomBtnList_item\"},[_c('div',{staticClass:\"itemImgBox\"},[_c('img',{attrs:{\"src\":item.imgUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"itemTitle\"},[_c('span',[_vm._v(_vm._s(item.title))])])])}),0)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"top-right\"},[_c('img',{attrs:{\"src\":require(\"../assets/img/share.svg\"),\"alt\":\"\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"songdetali\">\r\n        <div\r\n            class=\"beforeBg\"\r\n            :style=\"{ backgroundImage: 'url(' + songData.al.picUrl + ')' }\"\r\n        ></div>\r\n        <div class=\"top flexbetween\">\r\n            <div class=\"top-left\">\r\n                <div class=\"iconbox\" @click=\"toBack\">\r\n                    <van-icon name=\"arrow-left\" size=\"24\" />\r\n                </div>\r\n                <div class=\"namebox\">\r\n                    <span class=\"one-ellipsis\">{{ songData.name }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"top-right\">\r\n                <img src=\"../assets/img/share.svg\" alt />\r\n            </div>\r\n        </div>\r\n        <div class=\"body\">\r\n            <div class=\"songdatabox flexbetween\">\r\n                <div class=\"singerimgbox\">\r\n                    <div class=\"imgbox\">\r\n                        <img\r\n                            v-if=\"songData.singerImg\"\r\n                            :src=\"songData.singerImg\"\r\n                            alt\r\n                        />\r\n                        <p v-else>\r\n                            暂无\r\n                            <br />图片\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"singername\">\r\n                        <span class=\"one-ellipsis\">{{\r\n                            songData.ar[0].name\r\n                        }}</span>\r\n                        <van-icon name=\"arrow\" size=\"8\" />\r\n                    </div>\r\n                </div>\r\n                <!-- 顶部图标 -->\r\n                <div class=\"iconsbox\">\r\n                    <div\r\n                        class=\"iconboxitem\"\r\n                        v-for=\"(item, index) in iconsdata\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div class=\"iconboxitem-img\" @click=\"golyrics\">\r\n                            <img :src=\"item.iconimg\" alt />\r\n                        </div>\r\n                        <div class=\"titlebox\">\r\n                            <span>{{ item.title }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"bodyconent\">\r\n                <div class=\"mintop\"></div>\r\n                <div class=\"conentImg\" @click=\"golyrics\">\r\n                    <img :src=\"songData.al.picUrl\" alt />\r\n                </div>\r\n                <!-- 进度条 -->\r\n                <div class=\"sliderBox\">\r\n                    <div class=\"showBox\"></div>\r\n                    <div class=\"startNum\">{{ thisSongData.newDate }}</div>\r\n                    <div\r\n                        class=\"sliderBtn\"\r\n                        @touchstart=\"touchSSliderBtn\"\r\n                        @touchmove=\"touchMsliderBtn\"\r\n                        @touchend=\"touchEsliderBtn\"\r\n                    ></div>\r\n                    <div class=\"endNum\">{{ songData.totalTime }}</div>\r\n                </div>\r\n                <!-- 播放按钮 -->\r\n                <div class=\"operationBox flexbetween\">\r\n                    <div class=\"leftBtn\" @click=\"switchBtn\">\r\n                        <img :src=\"newShowBtn\" alt />\r\n                    </div>\r\n                    <div class=\"centerBtn flexbetween\">\r\n                        <div\r\n                            class=\"centerBtn_left clearfix\"\r\n                            @click=\"setPrevSong\"\r\n                        >\r\n                            <div class=\"sjx_left fl\"></div>\r\n                            <div class=\"sjx_left fl\"></div>\r\n                        </div>\r\n                        <div class=\"centerBtn_center\" @click=\"clickPlay\">\r\n                            <img :src=\"btnUrl\" alt />\r\n                        </div>\r\n                        <div\r\n                            class=\"centerBtn_right clearfix\"\r\n                            @click=\"setNextSong\"\r\n                        >\r\n                            <div class=\"sjx_right fr\"></div>\r\n                            <div class=\"sjx_right fr\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"rightBtn\" is-link @click=\"showPopup\">\r\n                        <img src=\"../assets/img/musiclist.svg\" alt />\r\n                    </div>\r\n\r\n                    <!-- 弹出盒子 -->\r\n                    <van-popup\r\n                        round\r\n                        position=\"bottom\"\r\n                        :style=\"{ height: '64%' }\"\r\n                        v-model=\"show\"\r\n                        @opened=\"popupOpened\"\r\n                        @close=\"popupClose\"\r\n                    >\r\n                        <div class=\"title flexbetween\">\r\n                            <div class=\"titleLeft\">\r\n                                <span>当前播放</span>\r\n                                <span class=\"num\">({{ listLength }})</span>\r\n                            </div>\r\n                            <div class=\"titleRgiht\" @click=\"switchBtn\">\r\n                                <span>{{ playStyleText }}</span>\r\n                                <img :src=\"newShowBtn\" alt />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"listBody\">\r\n                            <div\r\n                                class=\"listBodyItem flexbetween\"\r\n                                :class=\"item.isActive ? 'active' : ''\"\r\n                                v-for=\"(item, index) in songListData\"\r\n                                :key=\"index\"\r\n                            >\r\n                                <div\r\n                                    class=\"listBodyItem_left one-ellipsis\"\r\n                                    @click=\"clickSongListItem(item, index)\"\r\n                                >\r\n                                    <div class=\"text\">\r\n                                        <span class=\"songName\">{{\r\n                                            item.name\r\n                                        }}</span>\r\n                                        <span class=\"songHen\">-</span>\r\n                                        <span class=\"songAuther\">{{\r\n                                            item.ar[0].name\r\n                                        }}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    class=\"listBodyItem_right\"\r\n                                    @click=\"delSong(index)\"\r\n                                >\r\n                                    <img src=\"../assets/img/close.svg\" alt />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </van-popup>\r\n                </div>\r\n                <!-- 底部选项 -->\r\n                <div class=\"bottomBtnList\">\r\n                    <div\r\n                        class=\"bottomBtnList_item\"\r\n                        v-for=\"(item, index) in bottomBtnData\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div class=\"itemImgBox\">\r\n                            <img :src=\"item.imgUrl\" alt />\r\n                        </div>\r\n                        <div class=\"itemTitle\">\r\n                            <span>{{ item.title }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport \"../assets/less/songdetail.less\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst {\r\n    mapState: musicState,\r\n    mapActions: musicActions\r\n} = createNamespacedHelpers(\"MusicAudioStore\");\r\nexport default {\r\n    name: \"Songdetail\",\r\n    data() {\r\n        return {\r\n            show: false,\r\n            //歌曲信息\r\n            thisSongData: {\r\n                singerImg: \"\",\r\n\r\n                newDate: \"\",\r\n                //进度条按钮的pageX\r\n                btnpagex: \"\",\r\n                touchBool: false,\r\n                //定时器\r\n                timeer: null,\r\n                //进度条盒子宽度\r\n                sliderBoxWidth: 0,\r\n                //滑块滑动位置X\r\n                sliderBtnMovepagex: 0\r\n            },\r\n\r\n            //播放类型按钮数据\r\n            styleBtnData: [\"xh\", \"onexh\", \"sj\"],\r\n            //当前播放类型按钮\r\n            newShowBtn: require(\"../assets/img/xh.svg\"),\r\n            //播放按钮数据\r\n            btnData: [\"redplay\", \"redsuspend\"],\r\n            btnUrl: require(\"./../assets/img/redplay.svg\"),\r\n            // 图标\r\n            iconsdata: [\r\n                {\r\n                    iconimg: require(\"../assets/img/mv.svg\"),\r\n                    title: \"MV\",\r\n                    url: {\r\n                        name: \"Mv\"\r\n                    }\r\n                },\r\n                {\r\n                    iconimg: require(\"../assets/img/sing.svg\"),\r\n                    title: \"演唱\",\r\n                    url: {\r\n                        name: \"Sing\"\r\n                    }\r\n                },\r\n                {\r\n                    iconimg: require(\"../assets/img/image.svg\"),\r\n                    title: \"图片\",\r\n                    url: {\r\n                        name: \"Image\"\r\n                    }\r\n                },\r\n                {\r\n                    iconimg: require(\"../assets/img/songword.svg\"),\r\n                    title: \"歌词\",\r\n                    url: {\r\n                        name: \"Songword\"\r\n                    }\r\n                }\r\n            ],\r\n            //底部图标\r\n            bottomBtnData: [\r\n                {\r\n                    imgUrl: require(\"../assets/img/live.svg\"),\r\n                    title: \"喜欢\"\r\n                },\r\n                {\r\n                    imgUrl: require(\"../assets/img/down.svg\"),\r\n                    title: \"下载\"\r\n                },\r\n                {\r\n                    imgUrl: require(\"../assets/img/ly.svg\"),\r\n                    title: \"留言\"\r\n                },\r\n                {\r\n                    imgUrl: require(\"../assets/img/more.svg\"),\r\n                    title: \"更多\"\r\n                }\r\n            ],\r\n\r\n            //列表数量\r\n            listLength: 0,\r\n            //当前播放类型文字\r\n            playStyleText: \"列表循环\",\r\n            playStyleTextData: [\"列表循环\", \"单曲循环\", \"随机播放\"]\r\n        };\r\n    },\r\n    computed: {\r\n        ...musicState([\r\n            \"songData\",\r\n            \"audio\",\r\n            \"iconNum\",\r\n            \"songListData\",\r\n            \"playStyleNum\"\r\n        ])\r\n    },\r\n    created() {\r\n        //设置音乐组件隐藏\r\n        this.setaudioxy(2);\r\n        //设置播放形式图标\r\n        this.newShowBtn = require(\"../assets/img/\" +\r\n            this.styleBtnData[this.playStyleNum] +\r\n            \".svg\");\r\n        //设置播放图标\r\n        this.btnUrl = require(\"./../assets/img/\" +\r\n            this.btnData[this.iconNum] +\r\n            \".svg\");\r\n    },\r\n\r\n    mounted() {\r\n        //设置进度条\r\n        this.setsliderBox();\r\n    },\r\n    // 停止定时器\r\n    // deactivated(keep-alive才有)\r\n    // 在组件被停用时调用\r\n    beforeDestroy() {\r\n        clearInterval(this.timeer);\r\n        this.timeer = null;\r\n    },\r\n    watch: {\r\n        iconNum(val) {\r\n            this.btnUrl = require(\"./../assets/img/\" +\r\n                this.btnData[val] +\r\n                \".svg\");\r\n        }\r\n    },\r\n    methods: {\r\n        ...musicActions([\r\n            \"setaudioxy\",\r\n            \"seticonNum\",\r\n            \"setsongData\",\r\n            \"setPlayStyleNum\"\r\n        ]),\r\n        // 返回\r\n        toBack() {\r\n            this.$router.go(-1);\r\n        },\r\n\r\n        //点击播放按钮\r\n        clickPlay() {\r\n            if (this.iconNum == 0) {\r\n                this.seticonNum(1);\r\n                this.setsliderBox();\r\n                this.audio.play();\r\n            } else {\r\n                this.seticonNum(0);\r\n                clearInterval(this.timeer);\r\n            }\r\n        },\r\n\r\n        //获取歌手描述\r\n        getSingerData(id) {\r\n            this.$toast.loading({\r\n                message: \"加载中...\",\r\n                forbidClick: true,\r\n                duration: 0,\r\n                loadingType: \"spinner\"\r\n            });\r\n            this.axios({\r\n                method: \"get\",\r\n                url: \"/artist/desc\",\r\n                params: {\r\n                    id\r\n                }\r\n            })\r\n                .then(result => {\r\n                    this.$toast.clear();\r\n                })\r\n                .catch(err => {\r\n                    this.$toast.clear();\r\n                });\r\n        },\r\n\r\n        //设置进度条函数\r\n        setNowSlider() {\r\n            let startS = Math.floor(this.audio.currentTime) % 60;\r\n            let startM = Math.floor((this.audio.currentTime / 60) % 60);\r\n            //设置进行中的时间\r\n            this.thisSongData.newDate = startM + \".\" + startS;\r\n            //设置合适的歌词时间格式\r\n            startM = startM <= 9 ? \"0\" + startM : startM;\r\n            startS = startS <= 9 ? \"0\" + startS : startS;\r\n            //计算比例\r\n            let num = this.songData.dt / 1000 / this.audio.currentTime;\r\n            //设置宽度\r\n            document.querySelector(\".showBox\").style.width = 100 / num + \"%\";\r\n            //设置滑块位置\r\n            document.querySelector(\".sliderBtn\").style.left =\r\n                this.sliderBoxWidth / num + \"px\";\r\n        },\r\n\r\n        //设置进度条\r\n        setsliderBox() {\r\n            //歌曲总时长\r\n            clearInterval(this.timeer);\r\n            this.timeer = null;\r\n            this.sliderBoxWidth = document.getElementsByClassName(\r\n                \"sliderBox\"\r\n            )[0].offsetWidth;\r\n            // 初始化，设置进度条函数\r\n            this.setNowSlider();\r\n            //定时器\r\n            if (this.iconNum == 1) {\r\n                this.timeer = setInterval(() => {\r\n                    // 设置进度条函数\r\n                    this.setNowSlider();\r\n                }, 1000);\r\n            } else {\r\n                clearInterval(this.timeer);\r\n                this.timeer = null;\r\n            }\r\n        },\r\n\r\n        //按下滑块\r\n        touchSSliderBtn(e) {\r\n            this.btnpagex = e.changedTouches[0].pageX;\r\n            this.touchBool = true;\r\n            clearInterval(this.timeer);\r\n            this.timeer = null;\r\n        },\r\n\r\n        // 滑块移动\r\n        touchMsliderBtn(e) {\r\n            if (this.touchBool) {\r\n                this.sliderBtnMovepagex = e.changedTouches[0].pageX;\r\n                //获取进度条盒子距离左边宽度\r\n                let sliderBoxLeft = document.querySelector(\".sliderBox\")\r\n                    .offsetLeft;\r\n\r\n                //判断滑块位置值\r\n                let sliderBtnLfet = 0;\r\n                if (this.sliderBtnMovepagex - sliderBoxLeft <= 0) {\r\n                    sliderBtnLfet = 0;\r\n                } else if (\r\n                    this.sliderBtnMovepagex - sliderBoxLeft >=\r\n                    this.sliderBoxWidth\r\n                ) {\r\n                    sliderBtnLfet = this.sliderBoxWidth;\r\n                } else {\r\n                    sliderBtnLfet = this.sliderBtnMovepagex - sliderBoxLeft;\r\n                }\r\n                // 设置滑块位置\r\n                document.querySelector(\".sliderBtn\").style.left =\r\n                    sliderBtnLfet + \"px\";\r\n                //设置进度条长度\r\n                document.querySelector(\".showBox\").style.width =\r\n                    sliderBtnLfet + \"px\";\r\n\r\n                //设置当前音乐播放时间以及显示\r\n                this.setStartData();\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n\r\n        //离开滑块\r\n        touchEsliderBtn() {\r\n            //设置进度条\r\n            this.setsliderBox();\r\n            if (\r\n                document.querySelector(\".showBox\").offsetWidth ==\r\n                this.sliderBoxWidth\r\n            ) {\r\n                return;\r\n            } else {\r\n                this.audio.play();\r\n                this.seticonNum(1);\r\n            }\r\n        },\r\n\r\n        //移动按钮时设置当前音乐播放时间以及显示\r\n        setStartData() {\r\n            let showboxwidth = document.querySelector(\".showBox\").offsetWidth;\r\n            let num = this.sliderBoxWidth / showboxwidth;\r\n            this.thisSongData.newDate =\r\n                Math.floor((this.songData.dt / 1000 / num / 60) % 60) +\r\n                \".\" +\r\n                Math.floor((this.songData.dt / 1000 / num) % 60);\r\n            this.audio.currentTime = Math.floor(this.songData.dt / 1000 / num);\r\n        },\r\n\r\n        //跳转到Lyrics\r\n        golyrics() {\r\n            this.$router.push({ name: \"Lyrics\" });\r\n        },\r\n\r\n        //下一首\r\n        setNextSong() {\r\n            //设置进度条\r\n            clearInterval(this.timeer);\r\n            this.timeer = null;\r\n            this.setsliderBox();\r\n            this.seticonNum(1);\r\n\r\n            let songId = this.audio.getAttribute(\"data-id\");\r\n            //下一首列表循环\r\n            if (this.playStyleNum == 0) {\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (songId == this.songListData[i].id) {\r\n                        let nowPlay = 0;\r\n                        if (i + 1 == this.songListData.length) {\r\n                            nowPlay = 0;\r\n                        } else {\r\n                            nowPlay = i + 1;\r\n                        }\r\n                        this.setsongData(this.songListData[nowPlay]).then(\r\n                            audio => {\r\n                                audio.play();\r\n                            }\r\n                        );\r\n                        this.songListData[nowPlay].isActive = true;\r\n                    } else {\r\n                        this.songListData[i].isActive = false;\r\n                    }\r\n                }\r\n            } //下一首随机播放\r\n            else if (this.playStyleNum == 2) {\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (songId == this.songListData[i].id) {\r\n                        let nowPlay = Math.ceil(\r\n                            Math.random() * this.songListData.length - 1\r\n                        );\r\n                        this.setsongData(this.songListData[nowPlay]).then(\r\n                            audio => {\r\n                                audio.play();\r\n                            }\r\n                        );\r\n                        this.songListData[nowPlay].isActive = true;\r\n                    } else {\r\n                        this.songListData[i].isActive = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        //上一首\r\n        setPrevSong() {\r\n            //设置进度条\r\n            clearInterval(this.timeer);\r\n            this.timeer = null;\r\n            this.setsliderBox();\r\n            this.seticonNum(1);\r\n            let songId = this.audio.getAttribute(\"data-id\");\r\n            //上一首列表循环\r\n            if (this.playStyleNum == 0) {\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (songId == this.songListData[i].id) {\r\n                        let nowPlay = 0;\r\n                        if (i - 1 < 0) {\r\n                            nowPlay = this.songListData.length - 1;\r\n                        } else {\r\n                            nowPlay = i - 1;\r\n                        }\r\n                        this.setsongData(this.songListData[nowPlay]).then(\r\n                            audio => {\r\n                                audio.play();\r\n                            }\r\n                        );\r\n                        this.songListData[nowPlay].isActive = true;\r\n                    } else {\r\n                        this.songListData[i].isActive = false;\r\n                    }\r\n                }\r\n            } else if (this.playStyleNum == 2) {\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (songId == this.songListData[i].id) {\r\n                        let nowPlay = Math.ceil(\r\n                            Math.random() * this.songListData.length - 1\r\n                        );\r\n                        this.setsongData(this.songListData[nowPlay]).then(\r\n                            audio => {\r\n                                audio.play();\r\n                            }\r\n                        );\r\n                        this.songListData[nowPlay].isActive = true;\r\n                    } else {\r\n                        this.songListData[i].isActive = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        //点击切换播放模式\r\n        switchBtn() {\r\n            let setNum = this.playStyleNum + 1;\r\n            if (setNum >= this.styleBtnData.length) {\r\n                setNum = 0;\r\n                this.setPlayStyleNum(0);\r\n            }\r\n            this.playStyleText = this.playStyleTextData[setNum];\r\n            this.newShowBtn = require(\"../assets/img/\" +\r\n                this.styleBtnData[setNum] +\r\n                \".svg\");\r\n            this.setPlayStyleNum(setNum);\r\n        },\r\n\r\n        //设置弹出框的title\r\n        popupOpened() {\r\n            document.querySelector(\".title\").style.position = \"fixed\";\r\n        },\r\n\r\n        //设置弹出框的title\r\n        popupClose() {\r\n            document.querySelector(\".title\").style.position = \"static\";\r\n        },\r\n\r\n        //点击删除\r\n        delSong(index) {\r\n            // 设置播放列表数量\r\n\r\n            //随机\r\n            if (this.playStyleNum == 2) {\r\n                let randomNum = Math.ceil(Math.random() * this.listLength - 1);\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (this.songListData[i].isActive) {\r\n                        if (i == index) {\r\n                            this.setsongData(this.songListData[randomNum]).then(\r\n                                audio => {\r\n                                    audio.play();\r\n                                }\r\n                            );\r\n                            this.songListData[randomNum].isActive = true;\r\n                        } else {\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                //其他\r\n                for (let i = 0; i < this.songListData.length; i++) {\r\n                    if (this.songListData[i].isActive) {\r\n                        if (i == index) {\r\n                            this.setsongData(this.songListData[i + 1]).then(\r\n                                audio => {\r\n                                    audio.play();\r\n                                }\r\n                            );\r\n                            this.songListData[i + 1].isActive = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.songListData.splice(index, 1);\r\n            this.listLength = this.songListData.length;\r\n        },\r\n\r\n        //点击显示播放歌单\r\n        showPopup() {\r\n            this.show = true;\r\n            // 设置播放列表数量\r\n            this.listLength = this.songListData.length;\r\n            let songId = this.audio.getAttribute(\"data-id\");\r\n            this.songListData.map(v => {\r\n                if (v.id == songId) {\r\n                    v.isActive = true;\r\n                } else {\r\n                    v.isActive = false;\r\n                }\r\n            });\r\n        },\r\n\r\n        //点击歌单的歌曲\r\n        clickSongListItem(item, index) {\r\n            if (item.isActive) {\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.songListData.length; i++) {\r\n                if (this.songListData[i].isActive) {\r\n                    this.songListData[i].isActive = false;\r\n                    break;\r\n                }\r\n            }\r\n            item.isActive = true;\r\n            this.setsongData(item).then(audio => {\r\n                audio.play();\r\n            });\r\n            this.seticonNum(1);\r\n        }\r\n\r\n        //\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Songdetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Songdetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Songdetail.vue?vue&type=template&id=5f20e79c&scoped=true&\"\nimport script from \"./Songdetail.vue?vue&type=script&lang=js&\"\nexport * from \"./Songdetail.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f20e79c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}